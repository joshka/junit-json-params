plugins {
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'
    id 'idea'
    id "org.sonarqube" version "3.5.0.2730"
    id "org.jetbrains.gradle.plugin.idea-ext" version "1.1.7"
    id 'io.codearte.nexus-staging' version '0.30.0'
}

group = 'net.joshka'
version = '5.9.2-r0'
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")
ext.isRunningOnTravis = System.getenv("CI") == "true"

description = """net.joshka:junit-json-params"""

sourceCompatibility = 1.8
targetCompatibility = 1.8

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
    options.deprecation = true
}

repositories {
    mavenCentral()
}

dependencies {
    api platform('org.junit:junit-bom:5.9.2')
    api 'org.junit.jupiter:junit-jupiter-api'
    api 'org.junit.jupiter:junit-jupiter-params'
    api 'javax.json:javax.json-api:1.1.4'
    testImplementation 'org.glassfish:javax.json:1.1.4'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
}

test {
    useJUnitPlatform()
}

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if(JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'JUnit JSON Params'
                description = 'JUnit 5 JSON Parameterized Tests library'
                url = 'http://www.joshka.net/junit-json-params/'
                inceptionYear = '2018'
                licenses {
                    license {
                        name = 'Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'joshka'
                        name = 'Josh McKinney'
                        url = 'http://www.joshka.net'
                    }
                }
                scm {
                    connection = 'scm:git:https://github.com/joshka/junit-json-params.git'
                    developerConnection = 'scm:git:https://github.com/joshka/junit-json-params.git'
                    url = 'https://github.com/joshka/junit-json-params/'
                }
                issueManagement {
                    system = 'Github'
                    url = 'https://github.com/joshka/junit-json-params/issues'
                }
            }
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "$buildDir/repos/releases"
            def snapshotsRepoUrl = "$buildDir/repos/snapshots"
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
        }
        maven {
            name = 'OSSRH'
            def releasesRepoUrl = 'https://oss.sonatype.org/service/local/staging/deploy/maven2/'
            def snapshotsRepoUrl = 'https://oss.sonatype.org/content/repositories/snapshots/'
            url = isReleaseVersion ? releasesRepoUrl : snapshotsRepoUrl
            credentials(PasswordCredentials) {
                username = isRunningOnTravis ? '' : sonatypeUsername
                password = isRunningOnTravis ? '' : sonatypePassword
            }
        }
    }
}

signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("uploadArchives") }
    useGpgCmd()
    sign publishing.publications.mavenJava
}

idea.project.settings {
    compiler {
        javac {
            // Necessary for JsonConverter as method parameters otherwise have names like 'arg0', ...
            javacAdditionalOptions "-parameters"
        }
    }
}

nexusStaging {
    packageGroup 'net.joshka'
    stagingProfileId '2751a733b7e537'
}
